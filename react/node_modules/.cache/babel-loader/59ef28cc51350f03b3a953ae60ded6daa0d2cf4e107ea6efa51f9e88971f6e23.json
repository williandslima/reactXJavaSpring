{"ast":null,"code":"var _jsxFileName = \"/Users/wslima/Documents/Clone/reactXJavaSpring/react/src/pages/Postagem/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FiPower, FiEdit, FiTrash2 } from 'react-icons/fi';\nimport api from '../../services/api';\nimport './styles.css';\nimport logoImage from '../../assets/logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Postagens() {\n  _s();\n  const [postagens, setPostagens] = useState([]);\n  const username = localStorage.getItem('usuario');\n  const accessToken = localStorage.getItem('accessToken');\n  const navigate = useNavigate();\n  useEffect(() => {\n    api.get('postagem/all', {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n  });\n\n  /*\r\n  \r\n      async function logout() {\r\n          localStorage.clear();\r\n          navigate('/');\r\n      }\r\n  \r\n  \r\n  \r\n      async function editPostagem(id) {\r\n          try {\r\n              navigate(`/postagem/new/${id}`)\r\n          } catch (error) {\r\n              alert('Edit failed! Try again.');\r\n          }\r\n      }\r\n      async function deletePostagem(id) {\r\n          try {\r\n              await api.delete(`api/postagem/v1/${id}`, {\r\n                  headers: {\r\n                      Authorization: `Bearer ${accessToken}`\r\n                  }\r\n              })\r\n  \r\n              setPostagens(postagens.filter(postagem => postagem.id !== id))\r\n          } catch (err) {\r\n              alert('Delete failed! Try again.');\r\n          }\r\n      }\r\n      async function fetchMorePostagens() {\r\n          const response = await api.get('postagem/all', {\r\n              headers: {\r\n                  Authorization: `Bearer ${accessToken}`\r\n              },\r\n              params: {\r\n                  page: page,\r\n                  limit: 4,\r\n                  direction: 'asc'\r\n              }\r\n          });\r\n  \r\n          setPostagens([ ...postagens, ...response.data._embedded.postagemVoes])\r\n          setPage(page + 1);\r\n      }\r\n  \r\n      useEffect(() => {\r\n          fetchMorePostagens();\r\n      }, []);\r\n      */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Erudio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Bem vindo, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: username.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 34\n        }, this), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"button\",\n        to: \"/tema/new/0\",\n        children: \"Add novo Tema \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"button\",\n        to: \"/postagem/new/0\",\n        children: \"Add nova Postagem \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FiPower, {\n          size: 18,\n          color: \"#251FC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Postagens salvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: postagens.map(postagem => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Titulo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: postagem.tituloLivro\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Descricao:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: postagem.descricao\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Foto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: postagem.foto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Autor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: postagem.autor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editPostagem(postagem.id),\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FiEdit, {\n            size: 20,\n            color: \"#251FC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePostagem(postagem.id),\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FiTrash2, {\n            size: 20,\n            color: \"#251FC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, postagem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: fetchMorePostagens,\n      type: \"button\",\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Postagens, \"NTOevv2kh5V+sfdBJ3IRVUUWGN4=\", false, function () {\n  return [useNavigate];\n});\n_c = Postagens;\nvar _c;\n$RefreshReg$(_c, \"Postagens\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","FiPower","FiEdit","FiTrash2","api","logoImage","Postagens","postagens","setPostagens","username","localStorage","getItem","accessToken","navigate","get","headers","Authorization","toUpperCase","logout","map","postagem","tituloLivro","descricao","foto","autor","editPostagem","id","deletePostagem","fetchMorePostagens"],"sources":["/Users/wslima/Documents/Clone/reactXJavaSpring/react/src/pages/Postagem/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FiPower, FiEdit, FiTrash2 } from 'react-icons/fi'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport './styles.css';\r\n\r\nimport logoImage from '../../assets/logo.svg'\r\n\r\nexport default function Postagens(){\r\n\r\n    const [postagens, setPostagens] = useState([]);\r\n    \r\n    const username = localStorage.getItem('usuario');\r\n    const accessToken = localStorage.getItem('accessToken');\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() =>{\r\n        api.get('postagem/all',{\r\n            headers : {\r\n                Authorization: accessToken\r\n            }   \r\n        });\r\n    })\r\n\r\n/*\r\n\r\n    async function logout() {\r\n        localStorage.clear();\r\n        navigate('/');\r\n    }\r\n\r\n\r\n\r\n    async function editPostagem(id) {\r\n        try {\r\n            navigate(`/postagem/new/${id}`)\r\n        } catch (error) {\r\n            alert('Edit failed! Try again.');\r\n        }\r\n    }\r\n    async function deletePostagem(id) {\r\n        try {\r\n            await api.delete(`api/postagem/v1/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            })\r\n\r\n            setPostagens(postagens.filter(postagem => postagem.id !== id))\r\n        } catch (err) {\r\n            alert('Delete failed! Try again.');\r\n        }\r\n    }\r\n    async function fetchMorePostagens() {\r\n        const response = await api.get('postagem/all', {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            },\r\n            params: {\r\n                page: page,\r\n                limit: 4,\r\n                direction: 'asc'\r\n            }\r\n        });\r\n\r\n        setPostagens([ ...postagens, ...response.data._embedded.postagemVoes])\r\n        setPage(page + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMorePostagens();\r\n    }, []);\r\n    */\r\n    return (\r\n        <div className=\"book-container\">\r\n            <header>\r\n                <img src={logoImage} alt=\"Erudio\"/>\r\n                <span>Bem vindo, <strong>{username.toUpperCase()}</strong>!</span>\r\n                <Link className=\"button\" to=\"/tema/new/0\">Add novo Tema </Link>\r\n                <Link className=\"button\" to=\"/postagem/new/0\">Add nova Postagem </Link>\r\n\r\n                <button onClick={logout} type=\"button\">\r\n                    <FiPower size={18} color=\"#251FC5\" />\r\n                </button>\r\n\r\n            </header>\r\n\r\n            <h1>Postagens salvas</h1>\r\n            <ul>\r\n                {postagens.map(postagem => (\r\n                    <li key={postagem.id}>\r\n                        <strong>Titulo:</strong>\r\n                        <p>{postagem.tituloLivro}</p>\r\n                        <strong>Descricao:</strong>\r\n                        <p>{postagem.descricao}</p>\r\n                        <strong>Foto:</strong>\r\n                        <p>{postagem.foto}</p>\r\n                        <strong>Autor:</strong>\r\n                        <p>{postagem.autor}</p>\r\n\r\n                        <button onClick={() => editPostagem(postagem.id)} type=\"button\">\r\n                            <FiEdit size={20} color=\"#251FC5\"/>\r\n                        </button>\r\n                        \r\n                        <button onClick={() => deletePostagem(postagem.id)} type=\"button\">\r\n                            <FiTrash2 size={20} color=\"#251FC5\"/>\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <button className=\"button\" onClick={fetchMorePostagens} type=\"button\">Load More</button>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}